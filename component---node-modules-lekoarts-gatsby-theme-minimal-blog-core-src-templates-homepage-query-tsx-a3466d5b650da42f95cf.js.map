{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-a3466d5b650da42f95cf.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx"],"sourcesContent":["/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3, a: { variant: `links.listItem` } },\n      variant: `section_bottom`,\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components), {Text} = _components;\n  if (!Text) _missingMdxReference(\"Text\", true);\n  return React.createElement(React.Fragment, null, React.createElement(Text, {\n    children: `Enthusiastic Frontend Developer`,\n    sx: {\n      fontSize: [3, 4, 5],\n      fontWeight: `bold`,\n      color: `heading`\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"I design and develop touchpoints where customers interact with our services, constantly striving to convey our ideas and values through the initial screens. I focus on UI/UX, user flow, performance tuning, and interactions to ensure a pleasant and intuitive user experience.\"), \"\\n\", React.createElement(_components.p, null, \"My goal is value-driven engineering, aiming to deliver the highest customer value and experience. I have a keen interest in beautiful UI and interactions, user-friendly UX, interface design, workflow automation, and cloud computing.\"), \"\\n\", React.createElement(_components.p, null, \"As a former industrial designer with international and domestic design awards, including the Red Dot Award, I bring a unique perspective to the intersection of design and technology.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {Title} = _components;\n  if (!Title) _missingMdxReference(\"Title\", true);\n  return React.createElement(React.Fragment, null, React.createElement(Title, {\n    text: \"Previous Posts\"\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://velog.io/@oneook/create-notion-page-with-lambda-scheduling\"\n  }, \"Lambda 스케줄링으로 매일 아침 자동으로 노션 페이지 만들기\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://velog.io/@oneook/%EB%B2%88%EC%97%AD-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-Map%EC%9D%84-Object-%EB%8C%80%EC%8B%A0-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC%ED%95%A0-%EB%95%8C%EB%8A%94-%EC%96%B8%EC%A0%9C%EC%9D%BC%EA%B9%8C%EC%9A%94\"\n  }, \"[번역] 자바스크립트 Map을 Object 대신 사용해야할 때는 언제일까요?\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://velog.io/@oneook/Web-Worker%EC%99%80-Service-Worker%EC%97%90-%EB%8C%80%ED%95%B4-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0\"\n  }, \"웹앱의 사용성을 높이는 Web Worker와 Service Worker에 대해 알아보기\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://velog.io/@oneook/Docker%EB%A1%9C-React-%EA%B0%9C%EB%B0%9C-%EB%B0%8F-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0\"\n  }, \"프론트엔드 개발자를 위한 Docker로 React 개발 및 배포하기\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://velog.io/@oneook/%EC%9D%B8%ED%94%84%EB%9E%A9-FE-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%82%B9-%EB%8D%B0%EC%9D%B4%EC%97%90-%EB%8B%A4%EB%85%80%EC%99%94%EC%8A%B5%EB%8B%88%EB%8B%A4\"\n  }, \"인프랩 심야 FE 네트워킹 데이 참여 후기\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { HeadFC, Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport { visuallyHidden } from \"../styles/utils\"\nimport Seo from \"./seo\"\nimport Hero from \"../texts/hero.mdx\"\nimport Bottom from \"../texts/bottom.mdx\"\n\nexport type MBHomepageProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n}\n\nconst Homepage = ({ posts }: MBHomepageProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 }, variant: `section_hero` }}>\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n\nexport const Head: HeadFC = () => <Seo />\n","import { graphql } from \"gatsby\"\nimport HomepageComponent, { Head } from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport { Head }\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { date: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Homepage, { Head } from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["_ref","children","jsx","sx","mb","ul","margin","padding","li","listStyle","a","variant","_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","Text","id","component","Error","_missingMdxReference","React","fontSize","fontWeight","color","wrapper","MDXLayout","Title","text","href","posts","basePath","blogPath","useMinimalBlogConfig","siteTitle","useSiteMetadata","Layout","visuallyHidden","mt","Hero","Link","to","replaceSlashes","Listing","showTags","List","Bottom","Head","Seo","data","allPost","Homepage","nodes","tags","tagsPath","map","tag","i","key","slug","t","_t$styles","styles","name","post","Box","title","date","ItemTags","className","BlogListItem","description","pathname","image","canonicalUrl","site","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","withPrefix"],"sourceRoot":""}